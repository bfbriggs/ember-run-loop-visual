{
  "version": 3,
  "file": "app.js",
  "sources": [
    "tmp/transpiled/app/app.js",
    "tmp/transpiled/app/components/current-queue-blip.js",
    "tmp/transpiled/app/components/run-loop-queue.js",
    "tmp/transpiled/app/controllers/application.js",
    "tmp/transpiled/app/models/stubbed_ember.js",
    "tmp/transpiled/app/router.js",
    "tmp/transpiled/app/routes/application.js"
  ],
  "names": [],
  "mappings": "AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;ACl
  "sourcesContent": [
    "define(\"appkit/app\",\n  [\"resolver\",\"appkit/router\"],\n  function(Resolver, router) {\n    \"use strict\";\n\r\n    var App = Ember.Application.create({\r\n      modulePrefix: 'appkit', // TODO: loaded via config\r\n      Resolver: Resolver,\r\n      Router: Ember.Router.extend({\r\n        router: router,\r\n        location: 'none'\r\n      })\r\n    });\r\n\r\n\n    return App;\n  });",
    "define(\"appkit/components/current-queue-blip\",\n  [],\n  function() {\n    \"use strict\";\n    var QUEUE_WIDTH = 160;\r\n\r\n    var CurrentQueueBlip = Ember.Component.extend({\r\n      attributeBindings: ['style'],\r\n\r\n      queueIndex: null\r\n    });\r\n\r\n\n    return CurrentQueueBlip;\n  });",
    "define(\"appkit/components/run-loop-queue\",\n  [],\n  function() {\n    \"use strict\";\n    var RunLoopQueue = Ember.Component.extend({\r\n      classNames: ['run-loop-queue'],\r\n      classNameBindings: ['active'],\r\n      active:function(){\r\n    \treturn this.get('parentView.controller.content.hasItems') && this.get('queue.name') === this.get('parentView.controller.content.currentQueue');\r\n      }.property('parentView.controller.content.currentQueue','parentView.controller.content.hasItems'),\r\n\r\n      shortenedItems: function(){\r\n        var queueItems = this.get('context.queue.actions'); \r\n          return (queueItems || []).slice(0,2);\r\n      }.property('context.queue.actions.length'),\r\n      moreItems:function(){\r\n      \treturn this.get('context.queue.actions.length') > 2;\r\n      }.property('context.queue.actions.length'),\r\n\r\n      moreItemsLength:function(){\r\n      \treturn this.get('context.queue.actions.length') - 2;\r\n      }.property('context.queue.actions.length'),\r\n\r\n    });\r\n\r\n\n    return RunLoopQueue;\n  });",
    "define(\"appkit/controllers/application\",\n  [],\n  function() {\n    \"use strict\";\n    var DEFAULT_CODE = [\r\n    \"function logFour() {\",\r\n    \"  console.log('processing: task #4');\",\r\n    \"}\",\r\n    \"\",\r\n    \"console.log('before Ember.run');\",\r\n    \"Ember.run(function(){\",\r\n    \"  Ember.run.schedule('actions', function task1(){\",\r\n    \"    console.log('processing: task #1');\",\r\n    \"  });\",\r\n    \"\",\r\n    \"  Ember.run.schedule('afterRender', function task3(){\",\r\n    \"    console.log('processing: task #3');\",\r\n    \"  });\",\r\n    \"\",\r\n    \"  Ember.run.scheduleOnce('afterRender', logFour);\",\r\n    \"  Ember.run.scheduleOnce('afterRender', logFour);\",\r\n    \"  Ember.run.scheduleOnce('afterRender', logFour);\",\r\n    \"\",\r\n    \"  Ember.run.schedule('render', function task2() {\",\r\n    \"    console.log('processing: task #2');\",\r\n    \"  });\",\r\n    \"\",\r\n    \"  console.log('end of callback');\",\r\n    \"});\",\r\n    \"\",\r\n    \"console.log('after Ember.run');\"\r\n    ].join(\"\\n\");\r\n\r\n    var ApplicationController = Ember.ObjectController.extend({\r\n      code: DEFAULT_CODE,\r\n      logs: [],\r\n      showVisual: false,\r\n      actions:\r\n      {\r\n      \tdisplayCode: function(){\r\n      \t\tthis.set('showVisual',false);\r\n      \t},\r\n      \tdisplayVisual: function(){\r\n      \t\tthis.set('showVisual',true);\r\n      \t}\r\n      }\r\n    });\r\n\r\n\n    return ApplicationController;\n  });",
    "define(\"appkit/models/stubbed_ember\",\n  [],\n  function() {\n    \"use strict\";\n    var slice = [].slice;\r\n\r\n    var StubbedEmber = Ember.create(Ember);\r\n\r\n    var FakeRunLoop = Ember.Object.extend({\r\n      currentQueueIndex: 0,\r\n      currentQueue:'sync',\r\n\r\n      isPlaying: false,\r\n      queues: Ember.run.queues.map(function(queueName) {\r\n        return { name: queueName, actions: [] };\r\n      }),\r\n\r\n      hasItems: false,\r\n\r\n      schedule: function(queueName, action, once) {\r\n        var queue = this.queues.findProperty('name', queueName);\r\n\r\n        if (once){\r\n          var count = queue.actions.reduce(function(sum, record) {\r\n            return (record.fn.name===action.fn.name) ? sum+1 : 0;\r\n          }, 0);\r\n\r\n          if (count>0) { return; }\r\n        }\r\n\r\n        queue.actions.pushObject(action);\r\n        this.set('hasItems', true);\r\n      },\r\n\r\n      nextStep: function() {\r\n        var currentQueueIndex = this.get('currentQueueIndex'),\r\n            queues = this.get('queues'),\r\n            index;\r\n\r\n        for (index = 0; index < currentQueueIndex; ++index) {\r\n          if (queues[index].actions.length) {\r\n            // Backtrack.\r\n            this.set('currentQueueIndex', index);\r\n            this.set('currentQueue', queues[index+1].name);\r\n            return;\r\n          }\r\n        }\r\n\r\n        var queue = queues[index];\r\n        if (queue.actions.length === 0) {\r\n          currentQueueIndex += 1;\r\n          if (currentQueueIndex === queues.length) {\r\n            this.set('isPlaying', false);\r\n            this.set('currentQueueIndex', 0);\r\n            this.set('currentQueue', 'sync');\r\n\r\n            this.set('hasItems', false);\r\n          } else {\r\n            this.set('currentQueue', queues[index+1].name);\r\n            this.set('currentQueueIndex', currentQueueIndex);\r\n          }\r\n          return;\r\n        }\r\n\r\n        var action = queue.actions.shiftObject();\r\n        action.fn.apply(action.target, action.args);\r\n      },\r\n\r\n      play: function() {\r\n        if (!this.get('isPlaying')) { return; }\r\n\r\n        this.nextStep();\r\n\r\n        Ember.run.later(this, 'play', 600);\r\n      }.observes('isPlaying')\r\n    });\r\n\r\n    var runLoop = StubbedEmber.fakeRunLoop = FakeRunLoop.create();\r\n\r\n    function normalize() {\r\n      var args = slice.call(arguments),\r\n          target = args.shift(),\r\n          fn;\r\n\r\n      if (typeof target === 'function') {\r\n        fn = target;\r\n        target = null;\r\n      } else {\r\n        args.shift();\r\n        fn = args.shift();\r\n      }\r\n\r\n      return {\r\n        target: target,\r\n        fn: fn,\r\n        args: args\r\n      };\r\n    }\r\n\r\n    StubbedEmber.run = function(fn) {\r\n      fn();\r\n    };\r\n\r\n    StubbedEmber.run.schedule = function(queueName) {\r\n      runLoop.schedule(queueName, normalize.apply(null, slice.call(arguments, 1)), false);\r\n    };\r\n\r\n    StubbedEmber.run.scheduleOnce = function(queueName, args) {\r\n      runLoop.schedule(queueName, normalize.apply(null, slice.call(arguments, 1)), true);\r\n    };\r\n\r\n    StubbedEmber.run.once = function(queue, args) {\r\n      StubbedEmber.run.scheduleOnce.apply(null, ['actions'].concat(slice.call(arguments)));\r\n    };\r\n\r\n    StubbedEmber.run.next = function() {\r\n      alert(\"run.next hasn't been implemented.\");\r\n    };\r\n\r\n    StubbedEmber.run.later = function() {\r\n      alert(\"run.later hasn't been implemented.\");\r\n    };\r\n\r\n\n    return StubbedEmber;\n  });",
    "define(\"appkit/router\",\n  [],\n  function() {\n    \"use strict\";\n    var router = Ember.Router.map(function(){\r\n    });\r\n\r\n\n    return router;\n  });",
    "define(\"appkit/routes/application\",\n  [\"appkit/models/stubbed_ember\"],\n  function(StubbedEmber) {\n    \"use strict\";\n\r\n    var map = Ember.ArrayPolyfills.map,\r\n        runLater = Ember.run.later;\r\n\r\n    var ApplicationRoute = Ember.Route.extend({\r\n      model: function() {\r\n        return StubbedEmber.fakeRunLoop;\r\n      },\r\n      actions: {\r\n        runCode: function() {\r\n          var Ember = StubbedEmber,\r\n              console = Ember.create(window.console),\r\n              controller = this.controller;\r\n\r\n          console.log = function() {\r\n            map.call(arguments, function(msg) {\r\n              window.console.log(msg);\r\n              controller.logs.pushObject('' + msg);\r\n            });\r\n          };\r\n\r\n          eval(this.controller.get('code'));\r\n        },\r\n\r\n        play: function() {\r\n          StubbedEmber.fakeRunLoop.set('isPlaying', true);\r\n        },\r\n\r\n        pause: function() {\r\n          StubbedEmber.fakeRunLoop.set('isPlaying', false);\r\n        },\r\n\r\n        step: function() {\r\n          StubbedEmber.fakeRunLoop.nextStep();\r\n        }\r\n      }\r\n    });\r\n\r\n\n    return ApplicationRoute;\n  });"
  ]
}